<launch>
  <node pkg="topic_tools" type="transform" name="publish_trigger_mongodb_event_google_chat_ros_send_goal"
        args="--wait-for-start /google_chat_ros/send/goal /publish_trigger_mongodb_event std_msgs/Header
              'std_msgs.msg.Header(stamp=m.header.stamp, frame_id=m._connection_header[&quot;callerid&quot;])' --import std_msgs" />
  <node pkg="topic_tools" type="transform" name="publish_trigger_mongodb_event_google_chat_ros_message_activity"
        args="--wait-for-start /google_chat_ros/message_activity /publish_trigger_mongodb_event std_msgs/Header
              'std_msgs.msg.Header(stamp=rospy.Time.now(), frame_id=m._connection_header[&quot;callerid&quot;])' --import std_msgs rospy" />

  <!-- republish compressed/throttled image data only when /publish_trigger_mongodb_event is published -->
  <node name="camera_throttle_nodelet"
        pkg="nodelet" type="nodelet"
        args="load jsk_topic_tools/SynchronizedThrottle mongodb_lifelog_nodelet_manager" >
    <rosparam subst_value="true">
      approximate_sync: true
      topics:
      - /publish_trigger_mongodb_event
      - /head_camera/rgb/image_rect_color/compressed
    </rosparam>
  </node>

  <!-- <group ns="lifelog"> -->
  <!--   <include file="lifelog_rgb_image.launch" > -->
  <!--     <arg name="node_name" value="hand_color_logger" /> -->
  <!--     <arg name="image" value="/head_camera/rgb/image_rect_color/compressed" /> -->
  <!--     <arg name="manager" value="mongodb_record_nodelet_manager" /> -->
  <!--   </include> -->
  <!-- </group> -->

  <arg name="launch_manager" default="true" />
  <arg name="manager" default="mongodb_lifelog_nodelet_manager" />
  <arg name="respawn" default="false" />
  <arg name="image" default="/head_camera/rgb/image_rect_color/compressed/throttled" />
  <arg name="node_name" default="hand_color_logger" />


  <node name="hand_color_logger"
        pkg="nodelet" type="nodelet"
        args="load jsk_robot_lifelog/LightweightLogger /$(arg manager)"
        respawn="$(arg respawn)">
    <remap from="~input" to="$(arg image)" />
    <rosparam subst_value="true">
      enable_monitor: false
      vital_check: false
    </rosparam>
  </node>

</launch>
