<launch>
  <arg name="scene" default="eng2"/>
  <arg name="MANAGER" default="elevator_move_base_manager"/>

  <node name="$(arg MANAGER)"
        pkg="nodelet" type="nodelet"
        args="manager"
        machine="c2" respawn="true" output="screen"/>

  <group ns="/narrow_stereo/left">
    <!-- Throttle image -->
    <node name="lightweight_throttle"
          pkg="nodelet" type="nodelet"
          args="load jsk_topic_tools/LightweightThrottle /$(arg MANAGER)"
          machine="c2">
      <remap from="~input" to="image_rect"/>
      <remap from="~output" to="image_rect_throttle"/>
      <rosparam>
        update_rate: 2.0
      </rosparam>
    </node>

    <node name="pass_through_image_rect"
          pkg="nodelet" type="nodelet"
          args="load jsk_topic_tools/Passthrough /$(arg MANAGER)"
          machine="c2">
      <remap from="~input" to="image_rect"/>
      <remap from="~output" to="pass_through_image_rect_output"/>
      <rosparam>
        default_duration: 0.0  # infinite
      </rosparam>
    </node>

    <node name="pass_through_image_rect_throttle"
          pkg="nodelet" type="nodelet"
          args="load jsk_topic_tools/Passthrough /$(arg MANAGER)"
          machine="c2">
      <remap from="~input" to="image_rect_throttle"/>
      <rosparam>
        default_duration: 0.0  # infinite
      </rosparam>
    </node>

    <!-- Detect elevator_call_panel / elevator_inside_panel. -->
    <node name="imagesift"
          pkg="nodelet" type="nodelet"
          args="load imagesift/ImageSift /$(arg MANAGER)"
          machine="c2"
          launch-prefix="nice -n +10">
      <remap from="image" to="pass_through_image_rect_throttle/output"/>
    </node>

    <include file="$(find elevator_move_base_pr2)/launch/elevator_panels_detection_$(arg scene).launch">
      <arg name="INPUT_FEATURE" value="ImageFeature0D"/>
      <arg name="MACHINE" value="c2"/>
    </include>

    <!-- XXX: This node is often killed on c2, but not on c1 -->
    <node name="find_elevator_button"
          pkg="elevator_move_base_pr2" type="find-elevator-button.l"
          machine="c1" respawn="true" output="screen"/>
  </group>

  <!-- Check if button is lit or not. -->
  <node name="light_detector"
        pkg="elevator_move_base_pr2" type="color_point_detector"
        machine="c2">
    <remap from="image" to="/wide_stereo/left/image_rect_color"/>
    <rosparam>
      red: 253
      green: 251
      blue: 240
      decay_r: 0.1
      decay_g: 0.1
      decay_b: 0.05
    </rosparam>
  </node>

  <!-- Read current elevator floor. -->
  <node name="panel_camera"
        pkg="jsk_perception" type="virtual_camera_mono"
        machine="c2">
    <remap from="image" to="/narrow_stereo/left/pass_through_image_rect_output"/>
  </node>

  <node name="elevator_number"
        pkg="elevator_move_base_pr2" type="match_template.py"
        machine="c2" output="screen">
    <remap from="~image" to="/panel_camera/image"/>
    <rosparam command="load"
              file="$(find elevator_move_base_pr2)/launch/template-$(arg scene).yaml"/>
    <rosparam>
      show_probability: false
    </rosparam>
  </node>

  <!-- Check if elevator door is open. -->
  <include file="$(find elevator_move_base_pr2)/launch/check_elevator_open.xml">
    <arg name="INPUT_CLOUD" value="/kinect_head/depth_registered/half/throttled/points"/>
    <arg name="MACHINE" value="c2"/>
  </include>

</launch>
