<launch>
  <arg name="ROBOT" default="$(optenv ROBOT sim)" />

  <param name="use_sim_time" value="true"/>
  <include file="$(find pr2_machine)/$(arg ROBOT).machine"/>
  <include file="$(find pr2_description)/robots/upload_pr2.launch"/>
  <include file="$(find jsk_maps)/launch/start_map_eng2.launch">
    <arg name="use_machine" value="true"/>
  </include>
  <include file="$(find elevator_move_base_pr2)/launch/elevator_move_base_modules.xml">
    <arg name="ROBOT" value="$(arg ROBOT)" />
  </include>

  <!-- inputs are tf, image_raw, camera_info, joint_states -->
  <node pkg="rosbag" type="play" name="rosbag_play"
        args="$(find elevator_move_base_pr2)/test/test-modules-callpanel.bag -l -r 0.5 --clock" />

  <group ns="/wide_stereo/left" >
    <node pkg="image_proc" type="image_proc" name="image_proc"/>
  </group>

  <!-- test for all modules for pushing buttons on call panel -->
  <test test-name="modules" pkg="roseus" type="roseus" time-limit="300"
        args="$(find elevator_move_base_pr2)/test/test-modules-callpanel.l" />

  <sphinxdoc><![CDATA[
This scripts is test for elevator call panel.

.. video:: build/test-modules-callpanel-1
  :width: 600

.. video:: build/test-modules-callpanel-2
  :width: 600

Then check the button color to detect the button was pushed.
The button area in the camera image is calcurated from Euslisp camera model and panel object model.

  ]]></sphinxdoc>

  <anode type="rviz" pkg="rviz" name="rviz" respawn="true"
        args="-d $(find elevator_move_base_pr2)/test/test-modules-callpanel.vcg"
        launch-prefix="glc-capture --start --out=$(find elevator_move_base_pr2)/build/test-modules-callpanel.glc" />

  <!-- we assume test code is invoked in alphabet order of test-name -->
  <atest type="glc_encode.sh" pkg="jsk_tools" test-name="z_encode_test1" args="$(find elevator_move_base_pr2)/build/test-modules-callpanel.glc" time-limit="1000"/>

</launch>
