<launch>
  <!-- image_raw, camera_info -> image_rect -> ImageFeature0D -> ObjectDetection -->
  <!-- And compare ObjectDetection with TF from rosbag -->

  <arg name="MANAGER" default="elevator_move_base_manager"/>
  <arg name="ROBOT" default="sim"/>
  <include file="$(find pr2_machine)/$(arg ROBOT).machine"/>

  <param name="/use_sim_time" value="true"/>

  <!-- inputs are tf, image_raw, camera_info, joint_states -->
  <node name="rosbag_play"
        pkg="rosbag" type="play"
        args="$(find elevator_move_base_pr2)/test/test-panel-pose-detection.bag -r 0.2 --clock --loop"/>

  <group ns="/narrow_stereo/left" >
    <node name="image_proc"
          pkg="image_proc" type="image_proc">
      <rosparam>
        queue_size: 100  <!-- image is throttled ?? -->
      </rosparam>
    </node>
  </group>

  <node name="$(arg MANAGER)"
        pkg="nodelet" type="nodelet"
        args="manager"
        machine="c2" respawn="true" output="screen"/>

  <!-- Detect elevator_call_panel / elevator_inside_panel. -->
  <group ns="/narrow_stereo/left">
    <node name="lightweight_throttle"
          pkg="nodelet" type="nodelet"
          args="load jsk_topic_tools/LightweightThrottle /$(arg MANAGER)"
          machine="c2">
      <remap from="~input" to="image_rect"/>
      <remap from="~output" to="image_rect_throttle"/>
      <rosparam>
        update_rate: 2.0
      </rosparam>
    </node>
    <node name="imagesift"
          pkg="nodelet" type="nodelet"
          args="load imagesift/ImageSift /$(arg MANAGER)"
          machine="c2"
          launch-prefix="nice -n +10">
      <remap from="image" to="image_rect_throttle"/>
    </node>
    <include file="$(find elevator_move_base_pr2)/launch/elevator_panels_detection_eng2.launch">
      <arg name="INPUT_FEATURE" value="ImageFeature0D"/>
      <arg name="MANAGER" value="/$(arg MANAGER)"/>
      <arg name="MACHINE" value="c2"/>
    </include>
    <group ns="/narrow_stereo/left/point_pose_extractor_elevator_call_panel">
      <rosparam>
        error_threshold: 500
      </rosparam>
    </group>
  </group>

  <!-- test for panel pose detection -->
  <test test-name="test_panel_pose_detection"
        name="test_panel_pose_detection"
        pkg="elevator_move_base_pr2" type="test-panel-pose-detection.l"
        time-limit="300">
    <rosparam>
      panel_type: elevator_call_panel
      max_distance: 100
    </rosparam>
  </test>

</launch>
