(require :fetch-interface "package://fetcheus/fetch-interface.l")
(load "package://jsk_maps/src/change-floor.l")
(load "package://jsk_fetch_startup/euslisp/navigation-utils.l")
(load "speech-recognition-service.l")
(fetch-init)

(defun go-to-7f-elevator()
    (undock)
    (send *ri* :move-to (make-coords :pos #f(1850 -30746 0) :rpy (float-vector -pi/2 0 0)) :frame-id "/map")
    (unix:sleep 1)
    (send *ri* :speak-jp "エレベータの下ボタンを押してください" :wait t)
    )
    
(defun get-on-elevator1()
    ;; (push-elevator-button())
    ;; (confirm-opened-door())
    (send *ri* :clear-costmap)
    (send *ri* :go-pos 3.0 0 180)
    (unix:sleep 1)
    (send *ri* :speak-jp "エレベータに乗りました" :wait t)
    )

(defun get-off-elevator1()
    (change-floor "/eng2/3f" :base-frame-name "/base_link")
    ;; SET SPOT!!!
    (send *ri* :speak-jp "マップを切り替えました" :wait t)
    ;; (recognize-arrive-at-eng2-3f())
    (send *ri* :clear-costmap)
    (send *ri* :go-pos 3.5 0 0)
    (unix:sleep 1)
    (send *ri* :speak-jp "エレベータからおりました" :wait t)
    )

(defun go-to-auto-door1()
    (send *ri* :clear-costmap)
    (send *ri* :speak-jp "ひとつめの自動ドアにむかいます")
    (send *ri* :move-to )
    )

(defun go-to-auto-door2()
    (send *ri* :clear-costmap)
    (send *ri* :speak-jp "ふたつめの自動ドアにむかいます")
    (send *ri* :move-to )
    )

(defun go-to-office-kyoin()
    (send *ri* :clear-costmap)
    (send *ri* :speak-jp "事務室にむかいます")
    (send *ri* :move-to (make-coords :pos #f(50000 -31276 0) :rpy (float-vector 0 0 0)) :frame-id "/map")
    )

(defun go-to-auto-door3()
    (send *ri* :clear-costmap)
    (send *ri* :speak-jp "みっつめの自動ドアにむかいます")
    (send *ri* :move-to )
    )

(defun go-to-auto-door4()
    (send *ri* :clear-costmap)
    (send *ri* :speak-jp "よっつめの自動ドアにむかいます")
    (send *ri* :move-to )
    )

(defun go-to-auto-door4()
    (send *ri* :clear-costmap)
    (send *ri* :speak-jp "よっつめの自動ドアにむかいます")
    (send *ri* :move-to )
    )

(defun go-to-3f-elevator()
    (send *ri* :clear-costmap)
    (send *ri* :move-to )
    (unix:sleep 1)
    (send *ri* :speak-jp "エレベータの下ボタンを押してください" :wait t)
    )

(defun get-on-elevator2()
    (send *ri* :clear-costmap)
    (send *ri* :go-pos 3.0 0 180)
    (unix:sleep 1)
    (send *ri* :speak-jp "エレベータに乗りました" :wait t)
    )

(defun get-off-elevator2()
    (change-floor "/eng2/7f" :base-frame-name "/base_link")
    ;; SET SPOT!!!
    (send *ri* :speak-jp "マップを切り替えました" :wait t)
    ;; (recognize-arrive-at-eng2-3f())
    (send *ri* :clear-costmap)
    (send *ri* :go-pos 3.5 0 0)
    (unix:sleep 1)
    (send *ri* :speak-jp "エレベータからおりました" :wait t)
    )

(defun go-to-73b2()
    (send *ri* :clear-costmap)
    (send *ri* :speak-jp "73B2に向かいます")
    (dock)
    )

(defun demo()
    (register-julius-words)
    (go-to-7f-elevator)
    (send *ri* :speak-jp "エレベータがついたらすすんでと言ってください")
    (wait-for-julius-trigger "すすんで")
    (get-on-elevator1)
    (send *ri* :speak-jp "エレベータがついたらすすんでと言ってください")
    (wait-for-julius-trigger "すすんで")
    (get-off-elevator1)
    (go-to-auto-door1)
    (send *ri* :speak-jp "自動ドアがあいたらすすんでと言ってください")
    (wait-for-julius-trigger "すすんで")
    (go-to-auto-door2)
    (send *ri* :speak-jp "自動ドアがあいたらすすんでと言ってください")
    (wait-for-julius-trigger "すすんで")
    (go-to-office-kyoin)
    (send *ri* :speak-jp "用事が済んだら教えてください")

    (wait-for-julius-trigger "かえるよ")
    (send *ri* :speak-jp "帰ります")
    (go-to-auto-door3)
    (send *ri* :speak-jp "自動ドアがあいたらすすんでと言ってください")
    (wait-for-julius-trigger "すすんで")
    (go-to-auto-door4)
    (send *ri* :speak-jp "自動ドアがあいたらすすんでと言ってください")
    (go-to-3f-elevator)
    (send *ri* :speak-jp "エレベータがついたらすすんでと言ってください")
    (wait-for-julius-trigger "すすんで")
    (get-on-elevator2)
    (send *ri* :speak-jp "エレベータがついたらすすんでと言ってください")
    (wait-for-julius-trigger "すすんで")
    (get-off-elevator2)
    (go-to-73b2)
    )

;; (defun go-to-front-of-auto-door1()
;;     (send *ri* :move-to (make-coords :pos #f(50000 -31276 0) :rpy (float-vector 0 0 0)) :frame-id "/map")
;;     )

;; (defun go-to-front-of-auto-door2())
    


;; jimusitu kyoin
;; (send *ri* :move-to (make-coords :pos #f(50000 -31276 0) :rpy (float-vector 0 0 0)) :frame-id "/map")

;; jimusitu gakusei
;; (send *ri* :move-to (make-coords :pos #f(50000 -26576 0) :rpy (float-vector 0 0 0)) :frame-id "/map")

;; elevator hall
;; (send *ri* :move-to (make-coords :pos #f(1850 -30746 0) :rpy (float-vector -pi/2 0 0)) :frame-id "/map")
