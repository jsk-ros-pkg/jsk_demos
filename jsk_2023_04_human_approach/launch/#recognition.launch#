<?xml version="1.0" encoding="utf-8"?>

<launch>
  <arg name="INPUT_PANORAMA_IMAGE" default="/dual_fisheye_to_panorama/output" />
  <arg name="INPUT_PANORAMA_INFO" default="/dual_fisheye_to_panorama/panorama_info" />
  <arg name="INPUT_CLASS" default="/edgetpu_panorama_object_detector/output/class" />
  <arg name="INPUT_RECTS" default="/edgetpu_panorama_object_detector/output/rects" />
  <arg name="insta360" default="true" />
  <arg name="coral" default="true" />


  <!-- For panorama -->
  <include if="$(arg insta360)" file="$(find jsk_perception)/sample/sample_insta360_air.launch">
    <arg name="gui" value="false" />
    <arg name="panorama_resolution_mode" value="low" />
  </include>


  <!-- For panorama detector -->
  <node pkg="tf" type="static_transform_publisher" name="camera_tf_publisher" args="0 0 0 0 0 0 rear_rail insta360_link 500" />

  <node pkg="jsk_perception"
        type="rect_array_in_panorama_to_bounding_box_array.py"
        name="rect_array_in_panorama_to_bounding_box_array">
    <remap from="~panorama_image" to="$(arg INPUT_PANORAMA_IMAGE)" />
    <remap from="~panorama_info" to="$(arg INPUT_PANORAMA_INFO)" />
    <remap from="~input_class" to="$(arg INPUT_CLASS)" />
    <remap from="~input_rects" to="$(arg INPUT_RECTS)" />
    <rosparam>
        frame_fixed: "rear_rail"
        image_transport: compressed
        dimensions_labels:
            person: [0.5, 0.5, 1.5]
    </rosparam>
  </node>

  <!-- For detect human pose with hand_camera -->
  <!-- <node pkg="nodelet" type="nodelet" name="miyamichi_demo_nodelet_manager" args="manager" /> -->
  <!-- <node pkg="nodelet" type="nodelet" name="nodelet" -->
  <!--       args="load depth_image_proc/register miyamichi_demo_nodelet_manager"> -->
  <!--   <remap from="rgb/camera_info" to="/camera/color/camera_info" /> -->
  <!--   <remap from="depth/camera_info" to="/camera/depth/camera_info" /> -->
  <!--   <remap from="depth/image_rect" to="/camera/depth/image_rect_raw" /> -->
  <!--   <remap from="depth_registered/image_rect" to="/camera/depth/image_rect_raw" />  -->
  <!-- </node> -->


  <!-- Detector -->  
  <!-- IMAGE mux for coral input -->
  <node pkg="topic_tools"
	type="mux"
	name="coral_input_image_mux"
	args="/coral_input/image /dual_fisheye_to_panorama/output /camera/color/image_raw mux:=coral_input/image"/>
	<!-- args="/coral_input/image /dual_fisheye_to_panorama/output /spot/camera/hand_color/image mux:=coral_input/image" -->
	
  <!-- launch coral -->
  <include if="$(arg coral)" file="$(find coral_usb)/launch/edgetpu_node_manager.launch">
    <arg name="INPUT_IMAGE" value="/coral_input/image" />
    <arg name="YAML_PATH" value="$(find jsk_2023_04_human_approach)/config/coral.yaml" />
  </include>
  <!-- publish 3D skeletons -->
  <node pkg="jsk_perception"
	type="skeleton_with_depth.py"
	name="skeleton_with_depth">
    <remap from="~input/skeleton" to="/edgetpu_human_pose_estimator/output/skeletons" />
    <remap from="~input/depth" to="/camera/aligned_depth_to_color/image_raw" /> -->
    <remap from="~input/info" to="/camera/aligned_depth_to_color/camera_info" />
    <!-- <remap from="~input/depth" to="/spot/camera/hand_depth/depth_registered/image" /> -->
    <!-- <remap from="~input/info" to="/spot/camera/hand_depth/camera_info" /> -->
  </node>
</launch>
