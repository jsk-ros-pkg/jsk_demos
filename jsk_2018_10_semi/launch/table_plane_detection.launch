<!-- -*- mode: xml -*- -->
<launch>
  <arg name="INPUT" default="/camera_remote/depth_registered/points"/>
  <arg name="DEFAULT_NAMESPACE" default="delivery_box_pickup/table_plane_datection"/>
  <arg name="FILTER_NAME_SUFFIX" default=""/>
  <arg name="OUTPUT" default="hsi_output$(arg FILTER_NAME_SUFFIX)"/>

  <arg name="h_max" default="-82" doc="maximum hue 127 corresponds to pi. When we define M as (max r g b), m as (r g b) and c as M-m, hue is calculated as 1. undifined (if c=0) 2. (((g-b)/6)*mod6)*60-180 (if M=r) 3. (((b-r)/c)+2)*60-180 (if M=g) 4. (((r-g)/c)+4)*60-180 (if M=b)"/>
  <arg name="h_min" default="-128" doc="minimum hue -128 corresponds to -pi. When we define M as (max r g b), m as (r g b) and c as M-m, hue is calculated as 1. undifined (if c=0) 2. (((g-b)/6)*mod6)*60-180 (if M=r) 3. (((b-r)/c)+2)*60-180 (if M=g) 4. (((r-g)/c)+4)*60-180 (if M=b)" />
  <arg name="s_max" default="255" doc="maximum satuation 255 corresponds to 1. Satuation is calucrated as (1-(min r g b)/intensity) * 255"/>
  <arg name="s_min" default="18" doc="minimum satuation 0 corresponds to 0. Satuation is calucrated as (1-(min r g b)/intensity) * 255"/>
  <arg name="i_max" default="255" doc="maximum intensity 255 corresponds to 1. Intensity is calculated as (r + g + b)/3"/>
  <arg name="i_min" default="0" doc="minimum intensity 0 corresponds to 0. Intensity is calculated as (r + g + b)/3"/>

  <arg name="create_manager" default="true" />
  <arg name="manager" default="hsi_filter_manager$(arg FILTER_NAME_SUFFIX)" />

  <group ns="$(arg DEFAULT_NAMESPACE)">
    <node if="$(arg create_manager)"
          pkg="nodelet" type="nodelet" name="$(arg manager)"
          args="manager" output="screen"/>

    <node pkg="nodelet" type="nodelet" name="hsi_filter$(arg FILTER_NAME_SUFFIX)"
          args="standalone jsk_pcl/HSIColorFilter $(arg manager)" output="screen">
      <remap from="~input" to="$(arg INPUT)" />
      <remap from="~output" to="$(arg OUTPUT)" />
      <rosparam>
        use_indices: false
        keep_organized: true
      </rosparam>
      <param name="h_limit_max" value="$(arg h_max)" />
      <param name="h_limit_min" value="$(arg h_min)" />
      <param name="s_limit_max" value="$(arg s_max)" />
      <param name="s_limit_min" value="$(arg s_min)" />
      <param name="i_limit_max" value="$(arg i_max)" />
      <param name="i_limit_min" value="$(arg i_min)" />
    </node>
    <anode pkg="nodelet" type="nodelet" name="euclidean_clustering$(arg FILTER_NAME_SUFFIX)"
          args="standalone jsk_pcl/EuclideanClustering $(arg manager)" output="screen" respawn="true">
      <remap from="~input" to="$(arg OUTPUT)" />
      <rosparam>
        tolerance: 0.1
        min_size: 500
      </rosparam>
    </anode>

  
    <node pkg="jsk_pcl_ros" type="organized_multi_plane_segmentation" name="multi_plane_estimate" respawn="true"> 
      <remap from="~input" to="/delivery_box_pickup/table_plane_datection/hsi_output"/>
      <!-- <remap from="~input" to="/head_camera/depth_downsample/points"/> -->
      <rosparam>
        estimate_normal: true
        max_curvature: 0.2
        min_size: 2000
        <!--estimation_method: 1
        estimate_normal: true
        normal_smoothing_size: 20.0-->
      </rosparam>
    </node>

  </group>

</launch>
