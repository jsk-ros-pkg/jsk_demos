<launch>
    <arg name="INPUT_IMAGE" default="/image"/>

    <!-- config -->
    <arg name="use_cam" default="true"/>

    <!-- Dependency modules configuration -->
    <arg name="google_chat_cloud_credentials_json"
        default="$(find database_talker)/auth/fetch-kiedno-default.json"/>
    <arg
        name="google_chat_project_id" default="fetch-kiedno"/>
    <arg
        name="google_chat_subscription_id" default="chat-sub"/>
    <arg
        name="dialogflow_credentials_json"
        default="$(find database_talker)/auth/fetch-kiedno-dialogflow.json"/>
    <arg
        name="dialogflow_project_id" default="axial-iris-343006"/>
    <arg name="mongodb_path"
        default="$(find database_talker)/test_db"/>
    <arg name="google_natural_launguage_credentials_json"
        default="$(find database_talker)/auth/eternal-byte-236613-4bc6962824d1.json"/>

    <!-- Dependency modules -->
    <include
        file="$(find google_chat_ros)/launch/google_chat.launch">
        <arg name="receiving_mode" value="pubsub"/>
        <arg name="google_cloud_credentials_json" value="$(arg google_chat_cloud_credentials_json)"/>
        <arg name="project_id" value="$(arg google_chat_project_id)"/>
        <arg name="subscription_id" value="$(arg google_chat_subscription_id)"/>
    </include>
    <include
        file="$(find dialogflow_task_executive)/launch/dialogflow_ros.launch">
        <arg name="use_tts" value="false"/>
        <arg name="credential" value="$(arg dialogflow_credentials_json)"/>
        <arg name="project_id" value="$(arg dialogflow_project_id)"/>
    </include>
    <include
        file="$(find mongodb_store)/launch/mongodb_store.launch">
        <arg name="db_path" value="$(arg mongodb_path)"/>
    </include>
    <include file="$(find jsk_perception)/launch/classification.launch">
        <arg name="run_api" value="true"/>
        <arg name="CLASSIFICATION_INPUT_IMAGE" value="$(arg INPUT_IMAGE)"/>
    </include>
    <include file="$(find ros_google_cloud_language)/launch/demo.launch">
        <arg name="google_cloud_credentials"
            value="$(arg google_natural_launguage_credentials_json)"/>
    </include>

    <group if="$(arg use_cam)">
        <node pkg="usb_cam" type="usb_cam_node" name="usb_cam_node">
            <remap from="~image_raw" to="$(arg INPUT_IMAGE)"/>
        </node>
    </group>

    <node pkg="dabase_talker" type="hoge.py" name="hoge" output="screen">
    </node>
</launch>
