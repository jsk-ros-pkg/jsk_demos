<launch>
  <arg name="start_rviz" default="false" />
  <arg name="wait_query" default="true" />
  <arg name="execute" default="false" />
  <arg name="DEMOTYPE" default="map" />
  <arg name="app_manager" default="false" />
  <arg name="run_behavior" default="true" />
  <arg name="visualize" default="true" />
  <arg name="roi" default="true" />
  <arg name="debug_view" default="true" />
  <include file="$(find pr2_machine)/$(env ROBOT).machine" />
  <!-- <arg name="app_manager" default="true" /> -->

  <!-- sample data for test -->
  <!-- <anode pkg="rosbag" type="play" name="play" -->
  <!--        args="-l -r 0.1 /home/leus/work/rits/refrig-kinect-c.bag" /> -->

  <group ns="fridge_cds_stocker">
    <node pkg="roseus" type="roseus" name="fridge_cds_stocker"
          output="screen" machine="c2"
          args="$(find jsk_perception)/euslisp/kalman-filtered-objectdetection-marker.l">
      <remap from="input/image" to="/kinect_head_c2/rgb/image_rect_color" />
      <remap from="input/ObjectDetection" to="/kinect_head/rgb/ObjectDetection" />
      <param name="object_width" value="0.231"/>
      <param name="object_height" value="0.196"/>
      <param name="relative_pose" value="0.22 0.05 0.075  0.707107 0
                                         -0.707107 0"/>
      <param name="target_type" value="fridge" />
    </node>
  </group>
  <group ns="can_cds_stocker">
    <node pkg="roseus" type="roseus" name="can_cds_stocker"
          output="screen" machine="c2"
          args="$(find jsk_perception)/euslisp/kalman-filtered-objectdetection-marker.l">
      <remap from="input/image" to="/kinect_head_c2/rgb/image_rect_color" />
      <remap from="input/ObjectDetection" to="/kinect_head_c2/depth_registered/ObjectDetection" />
      <param name="target_type" value="georgia" />
    </node>
  </group>

  <node name="gaussianmanager" pkg="nodelet" type="nodelet" args="manager"
        output="screen" if="$(arg visualize)"/>
  <node pkg="nodelet" type="nodelet" name="posewithcovstampedtogaussian"
        args="load jsk_pcl/PoseWithCovarianceStampedToGaussianPointCloud gaussianmanager"
        output="screen" >
    <remap from="~input" to="/simplecov" />
    <rosparam>
      cut_plane: flipped_yz
      normalize_method: normalize_height
      sampling_num: 40
    </rosparam>
  </node>

  <!-- reference white -->
  <anode pkg="image_view2" type="image_view2" name="select_ref_white" machine="c2">
    <remap from="image" to="/kinect_head_c2/rgb/image_rect_color"/>
    <remap from="camera_info" to="/kinect_head_c2/rgb/camera_info"/>
  </anode>

  <node pkg="jsk_pcl_ros" type="attention_clipper" name="attention_clipper" output="screen" if="$(arg roi)">
    <remap from="~input" to="/kinect_head_c2/rgb/camera_info" />
    <rosparam>
      dimension_x: 0.3
      dimension_y: 0.3
      dimension_z: 0.05
      frame_id: "/map"
    </rosparam>
  </node>

  <node pkg="jsk_pcl_ros" type="roi_clipper" name="roi_attention_clipper" output="screen" if="$(arg roi)">
    <remap from="~input/image" to="/kinect_head_c2/rgb/image_rect_color" />
    <remap from="~input/camera_info" to="/attention_clipper/output" />
  </node>

  <!-- setup fridge handle marker template -->
  <group ns="/kinect_head/rgb">
    <node name="fridge_demo_sift" pkg="imagesift"
          type="imagesift" launch-prefix="nice -n +10" output="screen"
          machine="c2" >
      <remap from="image" to="/kinect_head_c2/rgb/image_rect_color" />
      <remap from="camera_info" to="/kinect_head_c2/rgb/camera_info"/>
      <param name="use_mask" value="$(arg roi)" />
      <remap from="mask" to="/attention_clipper/output/mask"/>
    </node>
    <node pkg="jsk_perception" type="point_pose_extractor" machine="c2"
          name="fridge_detector">
      <param name="template_filename" value="$(find detect_cans_in_fridge_201202)/data/openni_rgb_fridge.png"/>
      <param name="window_name" value="fridge_handle_upper"/>
      <param name="object_width" value="0.231"/>
      <param name="object_height" value="0.196"/>
      <param name="relative_pose" value="0.22 0.05 0.075  0.707107 0 -0.707107 0"/>
      <param name="viewer_window" value="false" /><!-- to disable window-->
    </node>
  </group>
  <!-- load model (color histgrams) -->
  <include file="$(find detect_cans_in_fridge_201202)/launch/white_balance.launch" />

  <!-- detect cans -->
  <include file="$(find detect_cans_in_fridge_201202)/launch/detect_cans.launch">
    <arg name="debug_view" value="$(arg debug_view)" />
  </include>

  <sphinxdoc><![CDATA[

This package containts detect and fetch can in the fridge demo program


.. figure:: http://r7videos-thumbnail.s3.amazonaws.com/ER7_RE_JR_DOMESTICAS_452kbps_2012-02-23_b9dace72-5e73-11e1-b9a6-4ba54d97a5f8.jpg
   :width 400

   http://noticias.r7.com/videos/japoneses-utilizam-robo-para-as-funcoes-de-empregada-domestica/idmedia/4f46c7a2fc9b864945d600a5.html

.. code-block:: bash

  @c1; roslaunch jsk_pr2_startup pr2.launch
  @c1; roslaunch detect_cans_in_fridge_201202 startup.launch
  @local; roslaunch  detect_cans_in_fridge_201202 rviz.launch

set current pr2 position using "2D Pose Estimate" button on rviz

make sure that Tool Properties -> Interact -> 2D Nav Goal -> Topic is move_bas_simple_goal and  
2DPoseEstimate is initialpose.

.. code-block:: bash

  @local; rosrun roseus roseus `rospack find detect_cans_in_fridge_201202`/euslisp/main.l

type (init)(demo) to start demo

]]></sphinxdoc>

</launch>
