<launch>
  <group ns="/head_camera/rgb/">
    <node name="image_siftnode" pkg="imagesift" type="imagesift"
	  output="screen" >
      <remap from="image" to="image_rect_color" />
      <!-- <param name="image_transport" value="compressed" /> -->
      <param name="image_transport" value="raw" />
    </node>

    <node name="point_pose_extractor" pkg="jsk_perception"
	  type="point_pose_extractor">
      <param name="child_frame_name" value="opencv_logo"/>
      <!-- <param name="template_filename" value="$(find jsk_perception)/sample/opencv-logo2.png"/> -->
      <param name="template_filename" value="/home/mech-user/semi_ws/src/jsk_demos/jsk_2020_10_semi/ubereats.png"/>
      <param name="object_width" value="0.155" />
      <param name="object_height" value="0.155" />
      <param name="reprojection_threshold" value="10.0" />  <!-- 3.0 -->
      <param name="distanceratio_threshold" value="0.60" /> <!-- 0.49 -->
      <param name="relative_pose" value="0 0 0 0 0 0 1" />    <!-- quaternion expression -->
      <!-- param name="relative_pose" value="0 0 0 0 0 0" / --> <!-- you can also use rpy expression. --> -->
      <param name="error_threshold" value="50.0" />
    </node>

    <node pkg="checkerboard_detector" type="objectdetection_tf_publisher.py"
          name="objectdetection_tf_publisher">
      <param name="use_simple_tf" value="true" />
    </node>
  </group>
</launch>
