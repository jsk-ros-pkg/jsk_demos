<launch>
  <arg name="ROBOT" default="$(optenv ROBOT pr2)"/>
  <arg name="use_throttle" default="false" />
  <arg name="machine" default="external"/>
  <arg name="camera" default="kinect_head_external"/>

  <arg name="gui" default="false" />
  <arg name="gpu" default="0" />

  <include file="$(find interactive_behavior_201409)/config/$(arg ROBOT).machine" />
  <arg name="throttle_prefix"     if="$(arg use_throttle)" default="throttled/" />
  <arg name="throttle_prefix" unless="$(arg use_throttle)" default="" />

  <arg name="input_image" default="/$(arg camera)/rgb/$(arg throttle_prefix)image_rect_color" />
  <arg name="input_camera_info" default="/$(arg camera)/rgb/$(arg throttle_prefix)camera_info" />
  <arg name="input_depth" default="/$(arg camera)/depth_registered/$(arg throttle_prefix)image_rect" />
  <node name="mask_rcnn_instance_segmentation"
        pkg="jsk_perception" type="mask_rcnn_instance_segmentation.py"
        clear_params="true" machine="$(arg machine)">
    <remap from="~input" to="$(arg input_image)" />
    <rosparam subst_value="true">
      anchor_scales: [4, 8, 16, 32]
      max_size: 1000
      min_size: 600
      gpu: $(arg gpu)
      pretrained_model: /etc/ros/jsk_data/73b2_kitchen_dataset/snapshot_model.npz
      fg_class_names:
      - dish
      - cup
      - spoon
      - fork
      - knife
      - tray
      - kettle
      - plasticbottle
      - paperpack
      - can
      - microwave
      - refrigerator
      - chair
      - table
      - tv/monitor
      - cupnoodle
      - cereal
      - cornpotage
      - teabag
      - alfort
      - alfortwhite
      - almond
      - apc_shelf_flont
      - chipstar
      - coffee
      - consome
      - dars
      - darsmilk
      - darswhite
      - donbe
      - kinoko
      - macadamia
      - marble
      - milktea
      - mixjuice
      - norishio
      - pie
      - ritz
      - shelf_flont
      - takenoko
      - tee
      - xylitop
      - yakisoba
    </rosparam>
  </node>

  <!-- use cluster_indices and labels -->
  <node name="image_cluster_indices_decomposer"
        pkg="jsk_perception" type="image_cluster_indices_decomposer.py"
        clear_params="true" machine="$(arg machine)">
    <remap from="~input" to="$(arg input_image)" />
    <remap from="~input/cluster_indices"
           to="mask_rcnn_instance_segmentation/output/cluster_indices" />
  </node>

  <!-- use lbl_cls and lbl_ins -->
  <node name="label_cls_to_mask"
        pkg="jsk_perception" type="label_to_mask_image"
        clear_params="true" machine="$(arg machine)">
    <remap from="~input" to="mask_rcnn_instance_segmentation/output/label_cls" />
    <rosparam subst_value="true">
      label_value: 14
    </rosparam>
  </node>
  <node name="apply_mask_image"
        pkg="jsk_perception" type="apply_mask_image"
        clear_params="true" machine="$(arg machine)">
    <remap from="~input" to="mask_rcnn_instance_segmentation/output/label_ins" />
    <remap from="~input/mask" to="label_cls_to_mask/output" />
    <rosparam subst_value="true">
      clip: false
      cval: -1
    </rosparam>
  </node>
  <node name="label_image_decomposer"
        pkg="jsk_perception" type="label_image_decomposer.py"
        clear_params="true" machine="$(arg machine)">
    <remap from="~input" to="$(arg input_image)" />
    <remap from="~input/label" to="apply_mask_image/output" />
    <rosparam subst_value="true">
      bg_label: -1
    </rosparam>
  </node>

  <node name="tile_image"
        pkg="jsk_perception" type="tile_image.py"
        clear_params="true" machine="$(arg machine)">
    <rosparam subst_value="true">
      input_topics:
        - $(arg input_image)
        - mask_rcnn_instance_segmentation/output/viz
        - image_cluster_indices_decomposer/output
        - label_image_decomposer/output/label_viz
      draw_topic_name: true
      font_scale: 0.8
      font_thickness: 2
    </rosparam>
  </node>

  <group if="$(arg gui)">
    <node name="image_view"
          pkg="image_view" type="image_view"
          clear_params="true" machine="$(arg machine)">
      <remap from="image" to="tile_image/output" />
    </node>
  </group>

</launch>
