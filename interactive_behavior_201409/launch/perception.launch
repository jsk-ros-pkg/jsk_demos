<launch>
  <arg name="use_tabletop" default="true"/>
  <arg name="use_ssd" default="true"/>
  <arg name="use_fridge" default="true"/>
  <arg name="use_visualizer" default="true"/>
  <arg name="use_mock" default="true"/>

  <arg name="ROBOT" default="$(optenv ROBOT pr2)"/>
  <arg name="machine" default="external"/>
  <arg name="camera" default="kinect_head_external"/>
  <arg name="dataset" default="ssd512_coco" />

  <arg name="model" default="ssd512"/>
  <arg name="model_path"
       default="$(optenv JSK_DATA_CACHE_DIR /etc/ros/jsk_data)/$(arg dataset)/model"/>
  <arg name="label_names"
       default="$(optenv JSK_DATA_CACHE_DIR /etc/ros/jsk_data)/$(arg dataset)/class.yaml"/>

  <!-- pick / place object -->
  <include file="$(find jsk_2017_12_pr2_coe)/launch/tabletop.launch"
           if="$(arg use_tabletop)">
    <arg name="ROBOT" value="$(arg ROBOT)"/>
    <arg name="machine" value="$(arg machine)"/>
    <arg name="camera" value="$(arg camera)"/>
  </include>

  <!-- find object -->
  <include file="$(find jsk_2017_12_pr2_coe)/launch/ssd.launch"
           if="$(arg use_ssd)">
    <arg name="ROBOT" value="$(arg ROBOT)"/>
    <arg name="machine" value="$(arg machine)"/>
    <arg name="camera" value="$(arg camera)"/>
    <arg name="use_voc" value="false"/>
    <arg name="model" value="$(arg model)"/>
    <arg name="model_path" value="$(arg model_path)"/>
    <arg name="label_names" value="$(arg label_names)"/>
  </include>

  <!-- fridge object detector -->
  <include file="$(find jsk_2017_12_pr2_coe)/launch/fridge.launch"
           if="$(arg use_fridge)">
    <arg name="ROBOT" value="$(arg ROBOT)"/>
    <arg name="machine" value="$(arg machine)"/>
    <arg name="camera" value="$(arg camera)"/>
  </include>

  <!-- lifelog -->
  <group ns="ssd" if="$(arg use_ssd)">
    <node name="position_estimator"
          pkg="mbtk" type="position_estimator.py"
          output="screen" machine="$(arg machine)"
          unless="$(arg use_mock)">
      <rosparam subst_value="true">
        database: jsk_robot_lifelog
        collection: localized_objects
        max_cluster_num: 3
      </rosparam>
    </node>
    <node name="position_estimator"
          pkg="mbtk" type="mock_position_estimator.py"
          output="screen" machine="$(arg machine)"
          if="$(arg use_mock)">
      <rosparam subst_value="true">
        max_cluster_num: 3
      </rosparam>
    </node>

    <node name="pose_distribution_visualizer"
          pkg="mbtk" type="pose_distribution_visualizer.py"
          output="screen" machine="$(arg machine)"
          if="$(arg use_visualizer)">
      <remap from="~input" to="position_estimator/output"/>
      <rosparam subst_value="true">
        min_z: 30.0
        max_z: 32.0
        publish_rate: 1.0
        latch: true
        remove_outliers: true
        outliers_threshold: 0.01
        precision: 0.1
      </rosparam>
    </node>

    <node name="pose_score_vis"
          pkg="mbtk" type="pose_score_visualizer.py"
          output="screen" machine="$(arg machine)"
          if="$(arg use_visualizer)">
      <remap from="~input/class" to="ssd_object_detector/output/class"/>
      <remap from="~input/pose" to="rect_centroid/output"/>
      <rosparam>
        approximate_sync: false
        queue_size: 100
        slop: 0.1
        target_blacklists: [donut, dog, keyboard, car]
      </rosparam>
    </node>
  </group>

  <node name="mbtk_move_base" pkg="mbtk" type="mbtk_move_base.py"
        output="screen" machine="$(arg machine)">
  </node>

  <node name="semantic_world" pkg="semantic_world" type="semantic_world.l"
        respawn="true" output="screen"/>
</launch>
